name       : vulkan
version    : 1.0.65.2
release    : 8
source     :
    - git|https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers.git : 6d71c6473925e03deab5b3396112cf31e95f1249
license    : Apache-2.0
component  : xorg.graphics
summary    : Khronos Vulkan ICD loader
description: |
    Vulkan is an Explicit API, enabling direct control over how GPUs actually work. No (or very little) validation or error checking is done inside a Vulkan driver. Applications have full control and responsibility. Any errors in how Vulkan is used often result in a crash. This project provides standard validation layers that can be enabled to ease development by helping developers verify their applications correctly use the Vulkan API.
    Vulkan supports multiple GPUs and multiple global contexts (VkInstance). The ICD loader is necessary to support multiple GPUs and the VkInstance level Vulkan commands. Additionally, the loader manages inserting Vulkan layer libraries, including validation layers between the application and the ICD.
builddeps  :
    - pkgconfig32(gl)
    - pkgconfig32(x11)
    - pkgconfig32(xcb)
    - pkgconfig32(xrandr)
    - pkgconfig32(wayland-client)
    - glslang-devel
    - glslang-32bit-devel
    - pkgconfig32(SPIRV-Tools)
    - spirv-headers
libsplit   : no
emul32     : yes
setup      : |
    %patch -p1 < $pkgfiles/external-spirv.patch
    mkdir build && pushd build

    echo "#pragma once" >> spirv_tools_commit_id.h
    echo "#define SPIRV_TOOLS_COMMIT_ID \"6018de81de5114e906a0098ac04a7cbc95aff500\"" >> spirv_tools_commit_id.h
    
    # assembler gets awfully unhappy.
    EXTRA32=""
    if [[ ! -z "${EMUL32BUILD}" ]]; then
        export ASFLAGS=--32
        export EXTRA32="-DCMAKE_INSTALL_LIBDIR=lib32"
    fi
    %cmake -DBUILD_WSI_MIR_SUPPORT=OFF \
           -DBUILD_WSI_WAYLAND_SUPPORT=ON \
           -DBUILD_WSI_XCB_SUPPORT=ON \
           -DBUILD_WSI_XLIB_SUPPORT=ON \
           -DGLSLANG_SPIRV_INCLUDE_DIR=/usr/include/spirv-tools \
           -DBUILD_TESTS=OFF \
           $EXTRA32 \
           -DBUILD_LAYERS=ON \
           -DCMAKE_SKIP_RPATH=True \
           -DCUSTOM_GLSLANG_BIN_ROOT=/usr/bin \
           -DCUSTOM_SPIRV_TOOLS_BIN_ROOT=/usr/bin \
           -DCMAKE_INSTALL_DATADIR=/share \
           ..
build      : |
    %make -C build
install    : |
    %make_install -C build

    # vulkan packaging is cranky to say the least.
    mv $installdir/usr/etc $installdir/usr/share

    # Nuke dummy icd loader
    rm -rf $installdir/usr/share/vulkan/icd.d
